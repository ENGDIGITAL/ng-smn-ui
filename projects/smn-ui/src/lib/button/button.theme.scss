@import "../core/variables";

@mixin ui-button($theme) {
    $text-color: ui-if(map-get($theme, is-dark) == true, rgba(255, 255, 255, .7), rgba(0, 0, 0, .54));
    $hover-color: ui-if(map-get($theme, is-dark) == true, #FFF, #000);
    $disabled-background-color: ui-if(map-get($theme, is-dark) == true, rgba(255, 255, 255, 0.12), rgba(0, 0, 0, 0.12));
    $disabled-text-color: ui-if(map-get($theme, is-dark) == true, rgba(255, 255, 255, 0.30), rgba(0, 0, 0, 0.26));

    .ui-button {
        &.flat {
            &::before {
                background-color: $hover-color;
            }

            .ui-ripple-wave {
                background-color: ui-if($hover-color == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
            }

            &.icon {
                &.primary::before {
                    background-color: map_get($theme, primary-color);
                }

                &.accent::before {
                    background-color: map_get($theme, accent-color);
                }
            }
        }

        &.outlined {
            color: ui-if(map_get($theme, is-dark) == true, rgba(255, 255, 255, 0.7), #000);

            &::before {
                background-color: ui-if(map-get($theme, is-dark) == true, #FFF, #000);
            }
        }

        &:disabled {
            background-color: $disabled-background-color;
            color: $disabled-text-color;

            &.flat {
                background-color: transparent;
            }
        }

        &:not(.success):not(.warning):not(.error):not(:disabled):not(.outlined) {
            background-color: ui-color('grey', '300');
            color: ui-text-color('grey', '300');

            &::before {
                background-color: ui-text-color('grey', '300');
            }

            .ui-ripple-wave {
                background-color: ui-if(ui-text-color('grey', '300') == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
            }

            &.flat {
                background-color: transparent;
                color: $text-color;

                &::before {
                    background-color: $hover-color;
                }

                .ui-ripple-wave {
                    background-color: ui-if($hover-color == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
                }

                ui-progress-radial.indeterminate .spinner-container .path {
                    stroke: $text-color;
                }
            }

            &.primary {
                background-color: map_get($theme, primary-color);
                color: map_get($theme, primary-color-text);

                .ui-ripple-wave {
                    background-color: ui-if(map_get($theme, primary-color-text) == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
                }

                &::before {
                    background-color: map_get($theme, primary-color-text);
                }

                &.flat {
                    background-color: transparent;
                    color: map_get($theme, primary-color);

                    &::before {
                        background-color: $hover-color;
                    }
                }

                ui-progress-radial.indeterminate .spinner-container .path {
                    stroke: map_get($theme, primary-color-text);
                }

                &.flat ui-progress-radial.indeterminate .spinner-container .path {
                    stroke: map_get($theme, primary-color);
                }
            }

            &.accent {
                background-color: map_get($theme, accent-color);
                color: map_get($theme, accent-color-text);

                .ui-ripple-wave {
                    background-color: ui-if(map_get($theme, accent-color-text) == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
                }

                &::before {
                    background-color: map_get($theme, accent-color-text);
                }

                &.flat {
                    background-color: transparent;
                    color: map_get($theme, accent-color);

                    &::before {
                        background-color: $hover-color;
                    }
                }

                ui-progress-radial.indeterminate .spinner-container .path {
                    stroke: map_get($theme, accent-color-text);
                }

                &.flat ui-progress-radial.indeterminate .spinner-container .path {
                    stroke: map_get($theme, accent-color);
                }
            }

            &.flat .ui-ripple-wave {
                background-color: ui-if($hover-color == #fff, rgba(255, 255, 255, 0.1), rgba(33, 33, 33, 0.1));
            }
        }

        &.outlined {
            background-color: transparent;
            border-color: ui-if(map_get($theme, is-dark) == true, rgba(255, 255, 255, 0.7), rgba(0, 0, 0, 0.12));

            &.primary:not(:disabled) {
                color: map_get($theme, primary-color);

                &.border {
                    border: 1px solid map_get($theme, primary-color);
                }
            }

            &.accent:not(:disabled) {
                color: map_get($theme, accent-color);

                &.border {
                    border: 1px solid map_get($theme, accent-color);
                }
            }
        }

        &.toggle {
            background-color: transparent;
            border-color: ui-if(map_get($theme, is-dark) == true, rgba(255, 255, 255, 0.7), rgba(0, 0, 0, 0.12));

            &.primary:not(.success):not(.warning):not(.error):not(:disabled):not(.outlined) {
                background-color: rgba(map_get($theme, primary-color), 0.2);
                color: map_get($theme, primary-color);
            }

            &.accent:not(.success):not(.warning):not(.error):not(:disabled):not(.outlined) {
                background-color: rgba(map_get($theme, accent-color), 0.2);
                color: map_get($theme, accent-color);
            }
        }

        .badge {
            &.primary {
                background-color: map_get($theme, primary-color);
                color: map_get($theme, primary-color-text);
            }

            &.accent {
                background-color: map_get($theme, accent-color);
                color: map_get($theme, accent-color-text);
            }
        }
    }
}
